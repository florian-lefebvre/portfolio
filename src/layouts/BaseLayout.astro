---
import "@fontsource-variable/inter";
import interFile from "@fontsource-variable/inter/files/inter-latin-wght-normal.woff2?url";
import "~/styles/main.css";
import Header from "~/components/Header.astro";
import Footer from "~/components/Footer.astro";
import { SEO } from "astro-seo";
import { ViewTransitions } from "astro:transitions";

interface Props {
  title: string;
  description: string;
  image?: string;
  article?: Required<Parameters<typeof SEO>[0]>["openGraph"]["article"];
}

const {
  title: _title,
  description,
  image = `${Astro.url.origin}/og.jpg`,
  article,
} = Astro.props;

const title = `${_title} | Florian Lefebvre`;

const canonical = Astro.url.href;
---

<html lang="en" dir="ltr" class="h-full">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" href="/favicon.ico" sizes="48x48" >
    <link rel="icon" href="/favicon.svg" sizes="any" type="image/svg+xml" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <link
      rel="preload"
      as="font"
      crossorigin="anonymous"
      href={interFile}
      type="font/woff2"
    />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <SEO
      {title}
      {description}
      {canonical}
      openGraph={{
        basic: {
          title,
          type: "website",
          image,
          url: canonical,
        },
        optional: {
          description,
          locale: "en",
        },
        article,
      }}
      twitter={{
        card: "summary_large_image",
        creator: "@LfbvrFlo",
        title,
        image,
        description,
      }}
    />
    <ViewTransitions />
    {
      import.meta.env.PROD && (
        <script
          is:inline
          defer
          data-domain="florian-lefebvre.dev"
          src="/js/script.js"
        />
      )
    }
    <slot name="head" />
  </head>
  <body class="flex min-h-full flex-col bg-bg text-text-subtle">
    <div class="sticky top-0 left-0 h-2 w-full z-10 bg-bg">
      <div
        id="page-progress"
        class="h-full bg-text transition-all linear duration-100"
        style={{ width: "0%" }}
      >
      </div>
    </div>
    <Header />
    <main>
      <slot />
    </main>
    <Footer />
    <script is:inline>
      const handleProgress = () => {
        // get elements
        const body = document.querySelector("body");
        const progressBar = document.getElementById("page-progress");

        // this function increase or decrease the percentage of the element to stretch
        function stretch() {
          const pixelScrolled = window.scrollY;
          const viewportHeight = window.innerHeight;
          const totalHeightScrollable = body.scrollHeight;

          /**
           *
           * @param {number} min
           * @param {number} n
           * @param {number} max
           */
          const clamp = (min, n, max) => Math.min(max, Math.max(min, n));

          // convert pixels to percentage
          const pixelsToPercentage = clamp(
            0,
            (pixelScrolled / (totalHeightScrollable - viewportHeight)) * 100,
            100
          );

          // set the width of the fluid element.
          progressBar.style.width = Math.round(pixelsToPercentage) + "%";
        }

        // append a scroll event listener to the window object
        window.addEventListener("scroll", stretch);
      };

      handleProgress();
      document.addEventListener("astro:after-swap", () => handleProgress());
    </script>
  </body>
</html>
