---
import '~/assets/css/main.css'
import Banner from '~/components/Layout/Banner'
import ThemeTransition from '~/components/Layout/ThemeTransition'
import i18next from 'i18next'
import Footer from '~/components/Layout/Footer/Footer.astro'
import Header from '~/components/Layout/Header/Header.astro'
import BackToTop from '~/components/Layout/BackToTop'
import AnimateOnce from '~/components/AnimateOnce'

export interface Props {
    disableAnimations?: boolean
}

const { disableAnimations = false } = Astro.props
---

<!DOCTYPE html>
<html lang={i18next.language}>
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <meta name="generator" content={Astro.generator} />
        <slot name="head" />
        <script>
            console.log('Hi there!')
            console.log('What are you looking for?')
            console.log('Just have a look at the source code ;)')
            console.log(
                'https://github.com/florian-lefebvre/portfolio/tree/v5/astro'
            )
            console.log('Built with Astro and Tailwind CSS')
            console.log('--------')
        </script>
        <script is:inline>
            let isDarkMode = window.matchMedia('(prefers-color-scheme: dark)')
            const defaultTheme = isDarkMode.matches ? 'dark' : 'light'

            function updateTheme(_theme) {
                const theme =
                    _theme ?? window.localStorage.theme ?? defaultTheme

                if (theme === 'dark') {
                    document.documentElement.classList.add('dark')
                } else if (theme === 'light') {
                    document.documentElement.classList.remove('dark')
                }

                return theme
            }

            document.documentElement.setAttribute('data-theme', updateTheme())

            new MutationObserver(([{ oldValue }]) => {
                let newValue =
                    document.documentElement.getAttribute('data-theme') ||
                    defaultTheme
                if (newValue !== oldValue) {
                    try {
                        window.localStorage.setItem('theme', newValue)
                    } catch {}
                    updateTheme(newValue)
                }
            }).observe(document.documentElement, {
                attributeFilter: ['data-theme'],
                attributeOldValue: true,
            })

            isDarkMode.addEventListener('change', () => updateTheme())
        </script>
        <script
            is:inline
            data-disable-animations={JSON.stringify(disableAnimations)}
        >
            const disableAnimations = JSON.parse(
                document.currentScript?.getAttribute(
                    'data-disable-animations'
                ) || null
            )
            const isBot =
                /bot|googlebot|crawler|spider|robot|crawling|Chrome-Lighthouse/i.test(
                    navigator.userAgent
                )
            const isMotionReduced = window.matchMedia(
                '(prefers-reduced-motion: reduce)'
            ).matches
            const disableAnimation =
                disableAnimations || isBot || isMotionReduced
            document.documentElement.setAttribute(
                'data-animate',
                JSON.stringify(!disableAnimation)
            )
        </script>
        {
            process.env.MODE === 'production' && (
                <script
                    is:inline
                    defer
                    data-domain="florian-lefebvre.dev"
                    src="/js/script.js"
                />
            )
        }
    </head>
    <body class="bg-neutral-2 text-neutral-12 dark:bg-neutralDark-4">
        <AnimateOnce client:load direction="bottom" delay={400} offset={false}>
            <Banner client:load />
        </AnimateOnce>
        <Header />
        <main id="swup">
            <slot />
            <BackToTop client:load />
        </main>
        <Footer />
        <ThemeTransition client:load />
        <script src="../../assets/scripts/swup.ts"></script>
    </body>
</html>
