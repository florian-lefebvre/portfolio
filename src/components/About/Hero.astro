---
import { t } from 'i18next'
import { Image } from '@astrojs/image/components'
import AnimateOnce from '~/components/AnimateOnce'
import Markdown from '../Markdown'
---

<div
    class="custom-container flex flex-col gap-16 px-4 py-24 text-center sm:text-left lg:flex-row"
>
    <div class="flex-1 flex-shrink-0 pb-12 sm:py-12">
        <AnimateOnce client:load>
            <h1 class="text-2xl font-light sm:text-4xl">
                <Markdown source={t('hero.title', { ns: 'pages.about' })} />
            </h1>
        </AnimateOnce>
        <div
            class="markdown-link mx-auto mt-8 grid max-w-lg gap-4 text-sm font-medium sm:ml-0 sm:text-base md:gap-8 lg:max-w-none"
        >
            {
                (
                    t('hero.content', {
                        ns: 'pages.about',
                        returnObjects: true,
                    }) as string[]
                ).map((e, i) => (
                    <AnimateOnce client:load delay={200 * i}>
                        <p>
                            <Markdown source={e} />
                        </p>
                    </AnimateOnce>
                ))
            }
        </div>
    </div>
    <div
        class="relative mx-auto flex max-w-lg flex-col-reverse gap-8 lg:max-w-none lg:flex-1"
    >
        <AnimateOnce
            client:load
            direction="left"
            className="hidden text-neutral-7 sm:block"
        >
            <svg width={240} height={390} fill="none" viewBox="0 0 240 390">
                <defs>
                    <pattern
                        id="837c3e70-6c3a-44e6-8854-cc48c737b659"
                        x={0}
                        y={0}
                        width={26}
                        height={26}
                        patternUnits="userSpaceOnUse"
                    >
                        <rect
                            x={0}
                            y={0}
                            width={6}
                            height={6}
                            fill="currentColor"></rect>
                    </pattern>
                </defs>
                <rect
                    width={240}
                    height={390}
                    fill="url(#837c3e70-6c3a-44e6-8854-cc48c737b659)"></rect>
            </svg>
        </AnimateOnce>
        <AnimateOnce
            client:load
            direction="left"
            delay={400}
            className="absolute top-48 right-8 hidden h-[270px] w-[250px] bg-primary-5 sm:block"
        />
        <AnimateOnce
            client:load
            direction="left"
            delay={600}
            className="top-6 right-0 h-[225px] w-full sm:absolute sm:w-[350px] lg:top-12"
        >
            <Image
                src={t('hero.images.1.url', { ns: 'pages.about' })}
                class="h-full w-full object-cover grayscale hover:grayscale-0 transition-[filter]"
                alt={t('hero.images.1.alt', { ns: 'pages.about' })}
                loading="lazy"
                height="740"
                aspectRatio="16:9"
                format="webp"
            />
        </AnimateOnce>
        <AnimateOnce
            client:load
            direction="left"
            delay={200}
            className="top-60 mx-auto h-72 w-5/6 sm:absolute sm:left-8 sm:w-72"
        >
            <Image
                src={t('hero.images.0.url', { ns: 'pages.about' })}
                class="h-full w-full object-cover grayscale hover:grayscale-0 transition-[filter]"
                alt={t('hero.images.0.alt', { ns: 'pages.about' })}
                loading="lazy"
                height="740"
                aspectRatio="1:1"
                format="webp"
            />
        </AnimateOnce>
    </div>
</div>
